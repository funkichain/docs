"use strict";(self.webpackChunk_funki_docs_frontend=self.webpackChunk_funki_docs_frontend||[]).push([[602],{9237:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tools/clients/thirdweb-sdk","title":"thirdweb SDK","description":"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Funki. This page covers installation, initialization, and functionalities in various programming languages.","source":"@site/docs/tools/clients/thirdweb-sdk.md","sourceDirName":"tools/clients","slug":"/tools/clients/thirdweb-sdk","permalink":"/docs/tools/clients/thirdweb-sdk","draft":false,"unlisted":false,"editUrl":"https://github.com/funkichain/docs/edit/main/packages/frontend/docs/tools/clients/thirdweb-sdk.md","tags":[],"version":"current","lastUpdatedAt":1734445511000,"frontMatter":{"title":"thirdweb SDK","slug":"/tools/clients/thirdweb-sdk","order":"6.9.2","description":"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Funki. This page covers installation, initialization, and functionalities in various programming languages.","keywords":["thirdweb SDK","thirdweb","Funki","Funki mainnet","Funki testnet","Funki network","web3 applications","smart contracts","React","TypeScript"]},"sidebar":"docSidebar","previous":{"title":"ethers.js","permalink":"/docs/tools/clients/ethers"},"next":{"title":"viem","permalink":"/docs/tools/clients/viem"}}');var r=e(1085),a=e(1184);const s={title:"thirdweb SDK",slug:"/tools/clients/thirdweb-sdk",order:"6.9.2",description:"Documentation for using the thirdweb SDK for building web3 applications and interacting with smart contracts on Funki. This page covers installation, initialization, and functionalities in various programming languages.",keywords:["thirdweb SDK","thirdweb","Funki","Funki mainnet","Funki testnet","Funki network","web3 applications","smart contracts","React","TypeScript"]},o="thirdweb SDK",c={},d=[{value:"Install",id:"install",level:2},{value:"Initializing the SDK with Funki",id:"initializing-the-sdk-with-funki",level:2},{value:"Interacting with smart contracts",id:"interacting-with-smart-contracts",level:2},{value:"Using contract extension functions",id:"using-contract-extension-functions",level:3},{value:"Usage",id:"usage",level:4},{value:"Reading contract data",id:"reading-contract-data",level:3},{value:"Writing transactions",id:"writing-transactions",level:3}];function h(t){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"thirdweb-sdk",children:"thirdweb SDK"})}),"\n",(0,r.jsx)(n.p,{children:"thirdweb SDK is a library that enables developers to build web3 applications and interact with any EVM-compatible blockchain."}),"\n",(0,r.jsx)(n.p,{children:"You can use the thirdweb SDK to build apps and interact with smart contracts deployed on the Funki network."}),"\n",(0,r.jsxs)(n.p,{children:["The thirdweb SDK is available in various programming languages, including: ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react",children:"React"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react-native",children:"React Native"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/typescript",children:"TypeScript"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/python",children:"Python"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/go",children:"Go"}),", and ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/unity",children:"Unity"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Visit the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/cli",children:"thirdweb documentation"})," for more instructions on using the thirdweb SDKs."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,r.jsx)(n.p,{children:"To install the thirdweb SDK, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install @thirdweb-dev/sdk ethers@5\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"initializing-the-sdk-with-funki",children:"Initializing the SDK with Funki"}),"\n",(0,r.jsxs)(n.p,{children:["To get started using the SDK, you must first initialize an instance of ",(0,r.jsx)(n.code,{children:"ThirdWebSDK"}),", and connect to the Funki network by passing in the ",(0,r.jsx)(n.code,{children:"Funki"})," chain."]}),"\n",(0,r.jsx)(n.p,{children:"To initialize the SDK with the Funki network and get a contract:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Funki } from '@thirdweb-dev/chains';\nimport { ThirdwebSDK } from '@thirdweb-dev/sdk/evm';\n\nconst sdk = new ThirdwebSDK(Funki);\nconst contract = await sdk.getContract('0x0000000000000000000000000000000000000000');\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["The code snippet above uses the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react",children:"React SDK"}),". The thirdweb SDKs are also available in ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react-native",children:"React Native"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/typescript",children:"TypeScript"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/python",children:"Python"}),", ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/go",children:"Go"}),", and ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/unity",children:"Unity"}),"."]}),(0,r.jsx)(n.p,{children:"If alternatively you'd like to initialize the SDK with Funki Sepolia (testnet), use the following code instead:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { FunkiSepoliaSandbox } from '@thirdweb-dev/chains';\nimport { ThirdwebSDK } from '@thirdweb-dev/sdk/evm';\n\nconst sdk = new ThirdwebSDK(FunkiSepoliaSandbox);\nconst contract = await sdk.getContract('0x0000000000000000000000000000000000000000');\n"})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"interacting-with-smart-contracts",children:"Interacting with smart contracts"}),"\n",(0,r.jsx)(n.p,{children:"Once you initialize the SDK and connect to a smart contract deployed to Funki, you can start calling functions on it using the SDK."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Any interaction you make with a smart contract will be made from the connected wallet automatically."})}),"\n",(0,r.jsx)(n.h3,{id:"using-contract-extension-functions",children:"Using contract extension functions"}),"\n",(0,r.jsxs)(n.p,{children:["The thirdweb SDK provides convenience functions when your smart contract uses ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/contractkit/extensions",children:"extensions"}),". This is the easiest way to read data and write transactions with your smart contracts."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if your contract implements the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/contractkit/erc721",children:"ERC721"})," extension, you can utilize all of the functions of the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721",children:"corresponding erc721 standard"})," in the SDK."]}),"\n",(0,r.jsxs)(n.p,{children:["As an example, below is a code snippet that uses ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react/react.useownednfts",children:(0,r.jsx)(n.code,{children:"useOwnedNFTs"})})," hook to get a list of NFTs owned by a single wallet address:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { useOwnedNFTs } from '@thirdweb-dev/react';\n\nconst { data, isLoading, error } = useOwnedNFTs(contract, '{{wallet_address}}');\n"})}),"\n",(0,r.jsx)(n.h4,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { useOwnedNFTs, useContract, useAddress } from '@thirdweb-dev/react';\n\n// Your smart contract address\nconst contractAddress = '{{contract_address}}';\n\nfunction App() {\n  const address = useAddress();\n  const { contract } = useContract(contractAddress);\n  const { data, isLoading, error } = useOwnedNFTs(contract, address);\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For more examples on using contract extension functions, visit the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/sdk/interacting-with-contracts#using-contract-extensions",children:"thirdweb developer documentation"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"reading-contract-data",children:"Reading contract data"}),"\n",(0,r.jsxs)(n.p,{children:["If your contract doesn\u2019t use any ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/contractkit/extensions",children:"extensions"}),", or you want to directly call functions on your smart contract to read data, you can use the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react/react.usecontractread",children:(0,r.jsx)(n.code,{children:"useContractRead"})})," hook."]}),"\n",(0,r.jsx)(n.p,{children:"Read data on your contract from a connected wallet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { contract } = useContract('{{contract_address}}');\nconst { data: myData, isLoading } = useContractRead(contract, 'myFunction');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"writing-transactions",children:"Writing transactions"}),"\n",(0,r.jsxs)(n.p,{children:["If your contract doesn\u2019t use any ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/contractkit/extensions",children:"extensions"}),", or you want to directly call functions on your smart contract to write data, you can use the ",(0,r.jsx)(n.a,{href:"https://portal.thirdweb.com/react/react.usecontractwrite",children:(0,r.jsx)(n.code,{children:"useContractWrite"})})," hook."]}),"\n",(0,r.jsx)(n.p,{children:"Make transactions on your contract from a connected wallet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { contract } = useContract('{{contract_address}}');\nconst { mutateAsync: myFunctionAsync } = useContractWrite(contract, 'myFunction');\nconst tx = await myFunctionAsync(['argument1', 'argument2']); // Call the function\n"})})]})}function l(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(h,{...t})}):h(t)}},1184:(t,n,e)=>{e.d(n,{R:()=>s,x:()=>o});var i=e(4041);const r={},a=i.createContext(r);function s(t){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),i.createElement(a.Provider,{value:n},t.children)}}}]);